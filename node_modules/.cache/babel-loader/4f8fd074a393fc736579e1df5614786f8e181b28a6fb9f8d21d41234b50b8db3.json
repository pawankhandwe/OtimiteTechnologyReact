{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\ex_5\\\\ex-1\\\\src\\\\component\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const newUser = {\n    password: \"\",\n    email: \"\"\n  };\n  let registeredUsers = [];\n\n  // Add the new user to the registeredUsers array\n  registeredUsers.push(newUser);\n\n  // Example of adding another user\n  const anotherUser = {\n    password: \"\",\n    email: \"\"\n    // Add other user data properties here\n  };\n\n  registeredUsers.push(anotherUser);\n\n  // Store the updated registeredUsers array in localStorage\n  localStorage.setItem(\"registeredUsers\", JSON.stringify(registeredUsers));\n  const {\n    user,\n    setUserSignUp\n  } = useAuth();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  const handleSignUp = () => {\n    const signupSuccess = true;\n    if (formData.password != formData.confirmpassword) {\n      alert('password not match!');\n    }\n    if (signupSuccess) {\n      anotherUser.email = formData.email;\n      anotherUser.password = formData.password;\n      navigate(\"/Login\");\n      registeredUsers.push(newUser);\n      localStorage.setItem(\"registereduser\", JSON.stringify(anotherUser));\n      localStorage.setItem(\"user\", \"true\");\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to SignUp Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmpassword\",\n          name: \"confirmpassword\",\n          value: formData.confirmpassword,\n          onChange: e => setFormData({\n            ...formData,\n            confirmpassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSignUp,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"a+tHDFx0Y1/UIzON9tsWrFqO/vU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","newUser","password","email","registeredUsers","push","anotherUser","localStorage","setItem","JSON","stringify","user","setUserSignUp","navigate","formData","setFormData","confirmpassword","handleSignUp","signupSuccess","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/reactjs/ex_5/ex-1/src/component/SignUp.tsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./auth\";\n\ninterface User {\n  password: string;\n  email: string;\n}\nconst SignUp = () => {\n\n\nconst newUser: User = {\n  password: \"\",\n  email: \"\",\n};\n\nlet registeredUsers: User[] = [];\n\n// Add the new user to the registeredUsers array\nregisteredUsers.push(newUser);\n\n// Example of adding another user\nconst anotherUser: User = {\n  password: \"\",\n  email: \"\",\n  // Add other user data properties here\n};\n\n\nregisteredUsers.push(anotherUser);\n\n// Store the updated registeredUsers array in localStorage\nlocalStorage.setItem(\"registeredUsers\", JSON.stringify(registeredUsers));\n\n\n  const { user, setUserSignUp } = useAuth();\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmpassword:\"\",\n  });\n \n\n  const handleSignUp = () => {\n    const signupSuccess = true; \n\n    if(formData.password!=formData.confirmpassword)\n    {\nalert('password not match!');\n    }\n    if (signupSuccess) {\n      anotherUser.email = formData.email;\n      anotherUser.password = formData.password;\n      navigate(\"/Login\");\n      registeredUsers.push(newUser);\n      localStorage.setItem(\"registereduser\", JSON.stringify(anotherUser));\n      localStorage.setItem(\"user\", \"true\");\n      \n    } else {\n     \n    }\n  };\n\n  return (\n    <>\n    <h1>Welcome to SignUp Page</h1>\n    <form>\n    <div>\n      <label htmlFor=\"email\">email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) =>\n          setFormData({ ...formData, email: e.target.value })\n        }\n      />\n    </div>\n    <br />\n    <div>\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={(e) =>\n          setFormData({ ...formData, password: e.target.value })\n        }\n      />\n    </div>\n    <br></br>\n    <div>\n      <label htmlFor=\"confirmpassword\">Confirm Password:</label>\n      <input\n        type=\"password\"\n        id=\"confirmpassword\"\n        name=\"confirmpassword\"\n        value={formData.confirmpassword}\n        onChange={(e) =>\n          setFormData({ ...formData, confirmpassword: e.target.value })\n        }\n      />\n    </div>\n    <br />\n    <button type=\"button\" onClick={handleSignUp}>\n      SignUp\n    </button>\n  </form>\n  </>\n  )\n \n}\n\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}