{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\ex_5\\\\ex-1\\\\src\\\\component\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const newUser = {\n    email: \"\",\n    password: \"\"\n  };\n  const {\n    user,\n    setUserSignUp\n  } = useAuth();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n\n  //   const handleSignUp = () => {\n\n  const [errors, setErrors] = useState({\n    emailError: \"\",\n    passwordError: \"\"\n  });\n  const handleSignUp = () => {\n    // Reset errors\n    setErrors({\n      emailError: \"\",\n      passwordError: \"\"\n    });\n    let signupSuccess = true;\n\n    // Email validation\n    if (!formData.email.includes(\"@\")) {\n      setErrors(prevState => ({\n        ...prevState,\n        emailError: \"Invalid email address\"\n      }));\n      signupSuccess = false;\n    }\n\n    // Password validation\n    if (formData.password.length < 8) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must be at least 8 characters\"\n      }));\n      signupSuccess = false;\n    } else if (!/[A-Z]/.test(formData.password)) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must contain at least one capital letter\"\n      }));\n      signupSuccess = false;\n    } else if (!/[$&+,:;=?@#|'<>.^*()%!-]/.test(formData.password)) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must contain at least one special character\"\n      }));\n      signupSuccess = false;\n    }\n    if (formData.password !== formData.confirmpassword) {\n      navigate(\"/SignUp\");\n      alert(\"Passwords do not match!\");\n      signupSuccess = false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SignUp Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmpassword\",\n          name: \"confirmpassword\",\n          value: formData.confirmpassword,\n          onChange: e => setFormData({\n            ...formData,\n            confirmpassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSignUp,\n        className: \"signup-button\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"p0TOOhahQtrmvmur0rWV80Psr1g=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","newUser","email","password","user","setUserSignUp","navigate","formData","setFormData","confirmpassword","errors","setErrors","emailError","passwordError","handleSignUp","signupSuccess","includes","prevState","length","test","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","target","className","onClick","_c","$RefreshReg$"],"sources":["D:/reactjs/ex_5/ex-1/src/component/SignUp.tsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./auth\";\n\ninterface User {\n  password: string;\n  email: string;\n}\nconst SignUp = () => {\n\nconst newUser: User = {\n  email: \"\",\n  password: \"\",\n  \n};\n\n  const { user, setUserSignUp } = useAuth();\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmpassword:\"\",\n  });\n \n\n//   const handleSignUp = () => {\n\n \n    const [errors, setErrors] = useState({\n      emailError: \"\",\n      passwordError: \"\",\n    });\n  \n    const handleSignUp = () => {\n      // Reset errors\n      setErrors({\n        emailError: \"\",\n        passwordError: \"\",\n      });\n  \n      let signupSuccess = true;\n      \n      // Email validation\n      if (!formData.email.includes(\"@\")) {\n        setErrors((prevState) => ({\n          ...prevState,\n          emailError: \"Invalid email address\",\n        }));\n        signupSuccess = false;\n      }\n  \n      // Password validation\n      if (formData.password.length < 8) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must be at least 8 characters\",\n        }));\n        signupSuccess = false;\n      } else if (!/[A-Z]/.test(formData.password)) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must contain at least one capital letter\",\n        }));\n        signupSuccess = false;\n      } else if (!/[$&+,:;=?@#|'<>.^*()%!-]/.test(formData.password)) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must contain at least one special character\",\n        }));\n        signupSuccess = false;\n      }\n  \n      if (formData.password !== formData.confirmpassword) {\n        navigate(\"/SignUp\");\n        alert(\"Passwords do not match!\");\n        signupSuccess = false;\n      }\n  \n   \n  };\n\n  return (\n    <>\n    <h1>SignUp Page</h1>\n    <form>\n    <div>\n      <label htmlFor=\"email\">email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) =>\n          setFormData({ ...formData, email: e.target.value })\n        }\n      />\n      \n  <span className=\"error-message\">{errors.emailError}</span>\n    </div>\n    <br />\n    <div>\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={(e) =>\n          setFormData({ ...formData, password: e.target.value })\n        }\n      />\n\n<span className=\"error-message\">{errors.passwordError}</span>\n    </div>\n    <br></br>\n    <div>\n      <label htmlFor=\"confirmpassword\">Confirm Password:</label>\n      <input\n        type=\"password\"\n        id=\"confirmpassword\"\n        name=\"confirmpassword\"\n        value={formData.confirmpassword}\n        onChange={(e) =>\n          setFormData({ ...formData, confirmpassword: e.target.value })\n        }\n        \n      />\n    </div>\n    <br />\n    <button type=\"button\" onClick={handleSignUp} className=\"signup-button\">\n      SignUp\n    </button>\n  </form>\n  </>\n  )\n \n}\n\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}