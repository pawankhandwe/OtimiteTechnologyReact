{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\ex_5\\\\ex-1\\\\src\\\\component\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  // const newUser: User = {\n  //   email: \"\",\n  //   password: \"\",\n\n  // };\n\n  //   const { user, setUserSignUp } = useAuth();\n  //   const navigate = useNavigate();\n\n  //   const [formData, setFormData] = useState({\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmpassword:\"\",\n  //   });\n\n  //   const handleSignUp = () => {\n\n  //     let signupSuccess = true; \n  //     if(formData.password!=formData.confirmpassword)\n  //     {\n  //       navigate(\"/SignUp\");\n  // alert('password not match!');\n  // signupSuccess=false;\n  //     }\n\n  //     if (signupSuccess) {\n\n  //       newUser.email = formData.email;\n  //       newUser.password = formData.password;\n\n  //   const storedData = localStorage.getItem('registeredusers');\n  //   console.log(storedData);\n  //   if(storedData==null)\n  //   {\n  //    let firstuser=[{email:'admin@gmail.com',password:'admin123'}];\n  //    firstuser.push(newUser);\n  //     localStorage.setItem('registeredusers',JSON.stringify(firstuser));\n  //   }\n  //   if(storedData!=null)\n  //   {\n  //     console.log(\"ddg\");\n  //     let registeredUsers: User[] = JSON.parse(storedData);\n  //       registeredUsers.push(newUser);\n  //       localStorage.setItem('registeredusers', JSON.stringify(registeredUsers));\n  //       localStorage.setItem(\"user\", \"true\");\n  //       navigate(\"/Login\");\n\n  //   }\n  // } \n  const [errors, setErrors] = useState({\n    emailError: \"\",\n    passwordError: \"\"\n  });\n  const handleSignUp = () => {\n    // Reset errors\n    setErrors({\n      emailError: \"\",\n      passwordError: \"\"\n    });\n    let signupSuccess = true;\n\n    // Email validation\n    if (!formData.email.includes(\"@\")) {\n      setErrors(prevState => ({\n        ...prevState,\n        emailError: \"Invalid email address\"\n      }));\n      signupSuccess = false;\n    }\n\n    // Password validation\n    if (formData.password.length < 8) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must be at least 8 characters\"\n      }));\n      signupSuccess = false;\n    } else if (!/[A-Z]/.test(formData.password)) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must contain at least one capital letter\"\n      }));\n      signupSuccess = false;\n    } else if (!/[$&+,:;=?@#|'<>.^*()%!-]/.test(formData.password)) {\n      setErrors(prevState => ({\n        ...prevState,\n        passwordError: \"Password must contain at least one special character\"\n      }));\n      signupSuccess = false;\n    }\n    if (formData.password !== formData.confirmpassword) {\n      navigate(\"/SignUp\");\n      alert(\"Passwords do not match!\");\n      signupSuccess = false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SignUp Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmpassword\",\n          name: \"confirmpassword\",\n          value: formData.confirmpassword,\n          onChange: e => setFormData({\n            ...formData,\n            confirmpassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSignUp,\n        className: \"signup-button\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"5uG4NGxwuXmm4696lQBfJLWpzMY=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","errors","setErrors","emailError","passwordError","handleSignUp","signupSuccess","formData","email","includes","prevState","password","length","test","confirmpassword","navigate","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","setFormData","target","onClick","className","_c","$RefreshReg$"],"sources":["D:/reactjs/ex_5/ex-1/src/component/SignUp.tsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./auth\";\n\ninterface User {\n  password: string;\n  email: string;\n}\nconst SignUp = () => {\n\n// const newUser: User = {\n//   email: \"\",\n//   password: \"\",\n  \n// };\n\n//   const { user, setUserSignUp } = useAuth();\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmpassword:\"\",\n//   });\n \n\n//   const handleSignUp = () => {\n\n//     let signupSuccess = true; \n//     if(formData.password!=formData.confirmpassword)\n//     {\n//       navigate(\"/SignUp\");\n// alert('password not match!');\n// signupSuccess=false;\n//     }\n    \n//     if (signupSuccess) {\n     \n    \n//       newUser.email = formData.email;\n//       newUser.password = formData.password;\n   \n//   const storedData = localStorage.getItem('registeredusers');\n//   console.log(storedData);\n//   if(storedData==null)\n//   {\n//    let firstuser=[{email:'admin@gmail.com',password:'admin123'}];\n//    firstuser.push(newUser);\n//     localStorage.setItem('registeredusers',JSON.stringify(firstuser));\n//   }\n//   if(storedData!=null)\n//   {\n//     console.log(\"ddg\");\n//     let registeredUsers: User[] = JSON.parse(storedData);\n//       registeredUsers.push(newUser);\n//       localStorage.setItem('registeredusers', JSON.stringify(registeredUsers));\n//       localStorage.setItem(\"user\", \"true\");\n//       navigate(\"/Login\");\n      \n//   }\n    // } \n    const [errors, setErrors] = useState({\n      emailError: \"\",\n      passwordError: \"\",\n    });\n  \n    const handleSignUp = () => {\n      // Reset errors\n      setErrors({\n        emailError: \"\",\n        passwordError: \"\",\n      });\n  \n      let signupSuccess = true;\n      \n      // Email validation\n      if (!formData.email.includes(\"@\")) {\n        setErrors((prevState) => ({\n          ...prevState,\n          emailError: \"Invalid email address\",\n        }));\n        signupSuccess = false;\n      }\n  \n      // Password validation\n      if (formData.password.length < 8) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must be at least 8 characters\",\n        }));\n        signupSuccess = false;\n      } else if (!/[A-Z]/.test(formData.password)) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must contain at least one capital letter\",\n        }));\n        signupSuccess = false;\n      } else if (!/[$&+,:;=?@#|'<>.^*()%!-]/.test(formData.password)) {\n        setErrors((prevState) => ({\n          ...prevState,\n          passwordError: \"Password must contain at least one special character\",\n        }));\n        signupSuccess = false;\n      }\n  \n      if (formData.password !== formData.confirmpassword) {\n        navigate(\"/SignUp\");\n        alert(\"Passwords do not match!\");\n        signupSuccess = false;\n      }\n  \n   \n  };\n\n  return (\n    <>\n    <h1>SignUp Page</h1>\n    <form>\n    <div>\n      <label htmlFor=\"email\">email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) =>\n          setFormData({ ...formData, email: e.target.value })\n        }\n      />\n    </div>\n    <br />\n    <div>\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={(e) =>\n          setFormData({ ...formData, password: e.target.value })\n        }\n      />\n    </div>\n    <br></br>\n    <div>\n      <label htmlFor=\"confirmpassword\">Confirm Password:</label>\n      <input\n        type=\"password\"\n        id=\"confirmpassword\"\n        name=\"confirmpassword\"\n        value={formData.confirmpassword}\n        onChange={(e) =>\n          setFormData({ ...formData, confirmpassword: e.target.value })\n        }\n      />\n    </div>\n    <br />\n    <button type=\"button\" onClick={handleSignUp} className=\"signup-button\">\n      SignUp\n    </button>\n  </form>\n  </>\n  )\n \n}\n\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}