{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\ex_5\\\\ex-1\\\\src\\\\component\\\\Cart.tsx\",\n  _s = $RefreshSig$();\n// // interface Product {\n// //   id: number;\n// //   title: string;\n// //   price: number;\n// //   image: string;\n// //   description: string;\n// // }\n\n// // interface CartItem extends Product {\n// //   quantity: number;\n// // }\n\n// // export default function Cart() {\n// //   console.log(cart);\n\n// //   carts= localStorage.getItem('cart');\n// //  console.log(carts);\n\n// //   return (\n// //     <div>\n// //       <h2>Cart Page</h2>\n// //       {carts.length > 0 ? (\n// //         <table>\n// //           <thead>\n// //             <tr>\n// //               <th>Title</th>\n// //               <th>Price</th>\n// //               <th>Quantity</th>\n// //               <th>Total</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {cart.map((item) => (\n// //               <tr key={item.id}>\n// //                 <td>{item.title}</td>\n// //                 <td>${item.price.toFixed(2)}</td>\n// //                 <td>{item.quantity}</td>\n// //                 <td>${(item.price * item.quantity).toFixed(2)}</td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       ) : (\n// //         <p>Your cart is empty.</p>\n// //       )}\n// //       <p>Grand Total: ${calculateTotalPrice().toFixed(2)}</p>\n// //     </div>\n// //   );\n// // }\n\n// import  { useEffect, useState } from 'react';\n\n// // Define interfaces for Product and CartItem\n// interface Product {\n//   id: number;\n//   title: string;\n//   price: number;\n//   image: string;\n//   description: string;\n// }\n\n// interface CartItem extends Product {\n//   quantity: number;\n// }\n\n// export default function Cart() {\n//   const [cart, setCart] = useState<CartItem[]>([]);\n\n//   useEffect(() => {\n//     const storedCart = localStorage.getItem('cart');\n//     if (storedCart) {\n//       setCart(JSON.parse(storedCart));\n//     }\n//   }, []);\n\n//   console.log(cart.length);\n\n//   const calculateTotalPrice = () => {\n//     return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Cart Page</h2>\n//       {cart.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Title</th>\n//               <th>Price</th>\n//               <th>Quantity</th>\n//               <th>Total</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {cart.map((item) => (\n//               <tr key={item.id}>\n//                 <td>{item.title}</td>\n//                 <td>${item.price.toFixed(2)}</td>\n//                 <td>{item.quantity}</td>\n//                 <td>${(item.price * item.quantity).toFixed(2)}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>Your cart is empty.</p>\n//       )}\n//       <p>Grand Total: ${calculateTotalPrice().toFixed(2)}</p>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\n\n// Define interfaces for Product and CartItem\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s();\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      // setCart(JSON.parse(storedCart));\n      const currentcart = JSON.parse(storedCart);\n      setCart([...currentcart]);\n    }\n  }, []);\n  const calculateTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), cart.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cart.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", item.price.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", (item.price * item.quantity).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Grand Total: $\", calculateTotalPrice().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(Cart, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Cart","_s","cart","setCart","storedCart","localStorage","getItem","currentcart","JSON","parse","calculateTotalPrice","reduce","total","item","price","quantity","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","toFixed","id","_c","$RefreshReg$"],"sources":["D:/reactjs/ex_5/ex-1/src/component/Cart.tsx"],"sourcesContent":["// // interface Product {\r\n// //   id: number;\r\n// //   title: string;\r\n// //   price: number;\r\n// //   image: string;\r\n// //   description: string;\r\n// // }\r\n\r\n// // interface CartItem extends Product {\r\n// //   quantity: number;\r\n// // }\r\n\r\n// // export default function Cart() {\r\n// //   console.log(cart);\r\n  \r\n// //   carts= localStorage.getItem('cart');\r\n// //  console.log(carts);\r\n \r\n  \r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Cart Page</h2>\r\n// //       {carts.length > 0 ? (\r\n// //         <table>\r\n// //           <thead>\r\n// //             <tr>\r\n// //               <th>Title</th>\r\n// //               <th>Price</th>\r\n// //               <th>Quantity</th>\r\n// //               <th>Total</th>\r\n// //             </tr>\r\n// //           </thead>\r\n// //           <tbody>\r\n// //             {cart.map((item) => (\r\n// //               <tr key={item.id}>\r\n// //                 <td>{item.title}</td>\r\n// //                 <td>${item.price.toFixed(2)}</td>\r\n// //                 <td>{item.quantity}</td>\r\n// //                 <td>${(item.price * item.quantity).toFixed(2)}</td>\r\n// //               </tr>\r\n// //             ))}\r\n// //           </tbody>\r\n// //         </table>\r\n// //       ) : (\r\n// //         <p>Your cart is empty.</p>\r\n// //       )}\r\n// //       <p>Grand Total: ${calculateTotalPrice().toFixed(2)}</p>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// import  { useEffect, useState } from 'react';\r\n\r\n// // Define interfaces for Product and CartItem\r\n// interface Product {\r\n//   id: number;\r\n//   title: string;\r\n//   price: number;\r\n//   image: string;\r\n//   description: string;\r\n// }\r\n\r\n// interface CartItem extends Product {\r\n//   quantity: number;\r\n// }\r\n\r\n// export default function Cart() {\r\n//   const [cart, setCart] = useState<CartItem[]>([]);\r\n\r\n//   useEffect(() => {\r\n//     const storedCart = localStorage.getItem('cart');\r\n//     if (storedCart) {\r\n//       setCart(JSON.parse(storedCart));\r\n//     }\r\n//   }, []);\r\n\r\n//   console.log(cart.length);\r\n  \r\n//   const calculateTotalPrice = () => {\r\n//     return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Cart Page</h2>\r\n//       {cart.length > 0 ? (\r\n//         <table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Title</th>\r\n//               <th>Price</th>\r\n//               <th>Quantity</th>\r\n//               <th>Total</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {cart.map((item) => (\r\n//               <tr key={item.id}>\r\n//                 <td>{item.title}</td>\r\n//                 <td>${item.price.toFixed(2)}</td>\r\n//                 <td>{item.quantity}</td>\r\n//                 <td>${(item.price * item.quantity).toFixed(2)}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       ) : (\r\n//         <p>Your cart is empty.</p>\r\n//       )}\r\n//       <p>Grand Total: ${calculateTotalPrice().toFixed(2)}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// Define interfaces for Product and CartItem\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n  description: string;\r\n}\r\n\r\ninterface CartItem extends Product {\r\n  quantity: number;\r\n}\r\n\r\nexport default function Cart() {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem('cart');\r\n    if (storedCart) {\r\n      // setCart(JSON.parse(storedCart));\r\n      const currentcart=JSON.parse(storedCart);\r\n      setCart([...currentcart]);\r\n    }\r\n  }, []);\r\n\r\n  const calculateTotalPrice = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cart Page</h2>\r\n      {cart.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Price</th>\r\n              <th>Quantity</th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cart.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.title}</td>\r\n                <td>${item.price.toFixed(2)}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>${(item.price * item.quantity).toFixed(2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>Your cart is empty.</p>\r\n      )}\r\n      <p>Grand Total: ${calculateTotalPrice().toFixed(2)}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}