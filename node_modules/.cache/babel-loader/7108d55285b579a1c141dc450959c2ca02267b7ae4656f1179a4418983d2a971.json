{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\ex_5\\\\ex-1\\\\src\\\\component\\\\Home.tsx\",\n  _s = $RefreshSig$();\n// import { useState,useEffect } from 'react';\n// export default function Home() {\n\n//     const [currentdata , setData ] = useState([]);\n//   useEffect(()=>{\n//       fetch(\"https://fakestoreapi.com/products\")\n//        .then((response) => response.json())\n//       .then((data) =>\n//       {\n//       setData(data);\n\n//       })\n\n//   },[])\n//   console.log(currentdata);  \n\n//   return (\n//     <>\n//        <div> \n//       {currentdata && currentdata.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>tittle</th>\n//               <th>price</th>\n//               <th>description</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentdata.map((data) => (\n//               <tr key={data.id}>\n//                 <td>{data.id}</td>\n//                 <td>{data.title}</td>\n//                 <td>{data.price}</td>\n//                 <td>{data.description}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>Loading data...</p>\n//       )}\n//     </div> \n\n//     </>\n\n//   );\n\n// }\n\nimport { useState, useEffect } from 'react';\n\n// Define an interface for the expected data structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [currentdata, setData] = useState([]); // Annotate currentdata with the Product[] type\n\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\").then(response => response.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n  console.log(currentdata);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentdata && currentdata.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentdata.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"8KBktW7bO854GF0bHn6kJon8QdE=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","currentdata","setData","fetch","then","response","json","data","console","log","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","id","title","image","price","description","_c","$RefreshReg$"],"sources":["D:/reactjs/ex_5/ex-1/src/component/Home.tsx"],"sourcesContent":["\r\n// import { useState,useEffect } from 'react';\r\n// export default function Home() {\r\n\r\n//     const [currentdata , setData ] = useState([]);\r\n//   useEffect(()=>{\r\n//       fetch(\"https://fakestoreapi.com/products\")\r\n//        .then((response) => response.json())\r\n//       .then((data) =>\r\n//       {\r\n//       setData(data);\r\n      \r\n//       })\r\n    \r\n//   },[])\r\n//   console.log(currentdata);  \r\n \r\n//   return (\r\n//     <>\r\n//        <div> \r\n//       {currentdata && currentdata.length > 0 ? (\r\n//         <table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>tittle</th>\r\n//               <th>price</th>\r\n//               <th>description</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {currentdata.map((data) => (\r\n//               <tr key={data.id}>\r\n//                 <td>{data.id}</td>\r\n//                 <td>{data.title}</td>\r\n//                 <td>{data.price}</td>\r\n//                 <td>{data.description}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       ) : (\r\n//         <p>Loading data...</p>\r\n//       )}\r\n//     </div> \r\n      \r\n//     </>\r\n  \r\n//   );\r\n      \r\n\r\n// }\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Define an interface for the expected data structure\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  description: string;\r\n}\r\n\r\nexport default function Home() {\r\n  const [currentdata, setData] = useState<Product[]>([]); // Annotate currentdata with the Product[] type\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  console.log(currentdata);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {currentdata && currentdata.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Title</th>\r\n                <th>Image</th>\r\n                <th>Price</th>\r\n                \r\n                <th>Description</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentdata.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td>{data.id}</td>\r\n                  <td>{data.title}</td>\r\n                  <td>{data.image}</td>\r\n                  <td>{data.price}</td>\r\n                  <td>{data.description}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>Loading data...</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}